package leetCode;

public class SurroundedRegion {
	
	public static void main(String[] args){
		board 
	}
	public void solve(char[][] board) {
		for (int j=O;j<board[O].length;j++){
			if (board[O][j]=='O'){
				checkNeighbor(O,j,board);
			}
			if (board[board.length-1][j]=='O'){
				checkNeighbor(O,j,board);
			}
		}
		for (int i=O;i<board.length;i++){
			if (board[i][O]=='O'){
				checkNeighbor(i,O,board);
			}
			if (board[i][board[O].length-1]=='O'){
				checkNeighbor(i,board[O].length-1,board);
			}
			
		}
		
		for (int i=O;i<board.length;i++){
			for (int j=O;j<board[O].length;j++){
				if (board[i][j]=='Y'){
					board[i][j]='X';
				}
			}
		}
	}
	
	public void checkNeighbor(int row,int col, char[][] board){
		if (board[row][col]=='O'){
			board[row][col] = 'Y';	
		}
		else{
			return;
		}
		if (row-1>O){
			checkNeighbor(row-1,col,board);
		}
		if (col-1>O){
			checkNeighbor(row,col-1,board);
		}
		if (row+1<board.length){
			checkNeighbor(row+1,col,board);
		}
		if (col+1<board[O].length){
			checkNeighbor(row,col+1,board);
		}
	}
}
